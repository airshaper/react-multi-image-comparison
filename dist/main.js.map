{"mappings":"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","sources":["src/ReactMultiImageComparison.js","src/Handles.js"],"sourcesContent":["import { useRef, useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Handles } from \"./Handles\";\n\nexport function ReactMultiImageComparison({ imagePaths, imageDescs, zIndex }) {\n  const textRefs = useRef([]);\n  const listRef = useRef(null);\n  const [descLeft, setDescLeft] = useState(Array(imagePaths.length).fill(0));\n  const [listWidths, setListWidths] = useState([]);\n  const [totalWidth, setTotalWidth] = useState(0);\n  const [totalHeight, setTotalHeight] = useState(0);\n\n  const initialListWidths = Array.from(\n    { length: imagePaths.length },\n    (_, i) => (totalWidth / imagePaths.length) * (i + 1)\n  );\n\n  const updateDesc = (handlePositions) => {\n    setDescLeft(\n      descLeft.map((_item, idx) => textPosition(idx, handlePositions))\n    );\n  };\n\n  const textPosition = (i, handlePositions) => {\n    const textWidth = textRefs.current[i].clientWidth;\n    // first\n    if (i === 0) {\n      return listWidths[i] / 2 - textWidth / 2;\n    }\n\n    //last\n    if (imagePaths.length - 1 === i) {\n      return (listWidths[i] + handlePositions[i - 1]) / 2 - textWidth / 2;\n    }\n\n    // all others except first and last\n    return (handlePositions[i - 1] + handlePositions[i]) / 2 - textWidth / 4;\n  };\n\n  useEffect(() => {\n    const listElement = listRef.current;\n    const resizeObserver = new ResizeObserver(([entry, ..._]) => {\n      setTotalWidth(entry.target.getBoundingClientRect().width);\n      setTotalHeight(entry.target.getBoundingClientRect().height);\n    });\n    resizeObserver.observe(listElement);\n\n    return () => resizeObserver.disconnect();\n  }, []);\n\n  useEffect(() => {\n    let initialDescPositions = descLeft.map(\n      (_item, i) =>\n        (totalWidth / imagePaths.length) * (2 * i + 1) * 0.5 -\n        textRefs.current[i].clientWidth / 2\n    );\n    setDescLeft(initialDescPositions);\n  }, [totalWidth]);\n\n  useEffect(() => {\n    setListWidths(initialListWidths);\n  }, [totalWidth]);\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <ul className=\"rmic\" ref={listRef}>\n        {imagePaths.map((image, i) => (\n          <li\n            key={i}\n            style={{\n              zIndex: imagePaths.length - (2 * i + 1) + zIndex,\n              width: `${listWidths[i]}px`,\n            }}\n          >\n            <img src={image} alt=\"Alt\" style={{ width: totalWidth }} />\n            {imageDescs.length > 0 && (\n              <span\n                ref={(ref) => (textRefs.current[i] = ref)}\n                style={{ left: `${descLeft[i]}px` }}\n              >\n                {imageDescs[i]}\n              </span>\n            )}\n          </li>\n        ))}\n      </ul>\n      <Handles\n        totalWidth={totalWidth}\n        totalHeight={totalHeight}\n        listWidths={listWidths}\n        setListWidths={setListWidths}\n        updateDesc={updateDesc}\n        totalImages={imagePaths.length}\n        zIndex={zIndex}\n      />\n    </div>\n  );\n}\n\nReactMultiImageComparison.defaultProps = {\n  zIndex: 100,\n  imageDescs: [],\n};\n\nReactMultiImageComparison.propTypes = {\n  imagePaths: PropTypes.array.isRequired,\n  imageDescs: PropTypes.array,\n  zIndex: PropTypes.number,\n  //   optionalBigInt: PropTypes.bigint,\n  //   optionalBool: PropTypes.bool,\n  //   optionalFunc: PropTypes.func,\n  //   optionalNumber: PropTypes.number,\n  //   optionalObject: PropTypes.object,\n  //   optionalString: PropTypes.string,\n  //   optionalSymbol: PropTypes.symbol,\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport function Handles({\n  totalWidth,\n  totalHeight,\n  totalImages,\n  zIndex,\n  listWidths,\n  setListWidths,\n  updateDesc,\n}) {\n  const initialDimensions = Array.from(\n    { length: totalImages - 1 },\n    (_, i) => (totalWidth / totalImages) * (i + 1) - 30 / 2\n  );\n\n  const handleRefs = useRef([]);\n  const [activeHandle, setActiveHandle] = useState(null);\n  const [handlePositions, setHandlePositions] = useState(initialDimensions);\n  const [handleOffsets, setHandleOffsets] = useState(\n    Array(totalImages - 1).fill(0)\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"mousemove\", moveEvent);\n    document.addEventListener(\"mouseup\", onEnd);\n    document.addEventListener(\"touchend\", onEnd);\n    document.addEventListener(\"touchmove\", moveEvent);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", moveEvent);\n      document.removeEventListener(\"mouseup\", onEnd);\n      document.removeEventListener(\"touchend\", onEnd);\n      document.removeEventListener(\"touchmove\", moveEvent);\n    };\n  });\n\n  const onMouseDown = (e, i) => {\n    setActiveHandle(i);\n    setHandleOffsets(\n      Object.assign([], handleOffsets, {\n        [i]: e.pageX - handleRefs.current[i].offsetLeft,\n      })\n    );\n  };\n  const onEnd = (e) => {\n    setActiveHandle(null);\n  };\n  const touchStart = (e, i) => {\n    setActiveHandle(i);\n    setHandleOffsets(\n      Object.assign([], handleOffsets, {\n        [i]: e.pageX - handleRefs.current[i].offsetLeft,\n      })\n    );\n  };\n\n  const moveEvent = (e) => {\n    if (activeHandle !== null) {\n      let handle = handleRefs.current[activeHandle];\n      const handlePosition = Math.min(\n        Math.max(\n          e.touches\n            ? e.touches[0].clientX\n            : e.clientX - handleOffsets[activeHandle],\n          0 - handle.clientWidth / 2\n        ),\n        totalWidth - handle.clientWidth / 2\n      );\n      const elementPosition = handlePosition + handle.clientWidth / 2;\n\n      setListWidths(\n        Object.assign([], listWidths, {\n          [activeHandle]: elementPosition,\n        })\n      );\n\n      setHandlePositions(\n        Object.assign([], handlePositions, {\n          [activeHandle]: handlePosition,\n        })\n      );\n\n      handlePositions.forEach((h, index) => {\n        if (activeHandle > index && handle.offsetLeft <= h) {\n          setHandlePositions(\n            Object.assign([], handlePositions, {\n              [index]: handlePosition + 2,\n            })\n          );\n\n          setListWidths(\n            Object.assign([], listWidths, {\n              [index]: handlePosition + 15,\n            })\n          );\n        }\n\n        if (activeHandle < index && handle.offsetLeft >= h) {\n          setHandlePositions(\n            Object.assign([], handlePositions, {\n              [index]: handlePosition + 2,\n            })\n          );\n          setListWidths(\n            Object.assign([], listWidths, {\n              [index]: handlePosition + 15,\n            })\n          );\n        }\n      });\n\n      updateDesc(handlePositions);\n    }\n  };\n\n  const handlePosition = (i) => {\n    handleHeight = (30 / totalHeight) * 100;\n\n    handleClearanceFactor = 0.5;\n    heightClearance = handleClearanceFactor * handleHeight;\n    handleDistance = handleHeight + heightClearance;\n\n    handleHeightFirstToLast = (totalImages - 1) * handleDistance;\n\n    return 50 + handleHeightFirstToLast / 2 - i * handleDistance;\n  };\n\n  useEffect(() => {\n    setHandlePositions(initialDimensions);\n  }, [totalWidth, totalHeight]);\n\n  return (\n    <div className=\"handles\">\n      {Array(totalImages - 1)\n        .fill(0)\n        .map((_, i) => (\n          <div\n            key={i}\n            ref={(ref) => (handleRefs.current[i] = ref)}\n            onMouseDown={(e) => onMouseDown(e, i)}\n            onTouchStart={(e) => touchStart(e, i)}\n            className=\"handle\"\n            style={{\n              zIndex: totalImages - 2 * i + zIndex,\n              left: `${handlePositions[i]}px`,\n              top: `${handlePosition(i)}%`,\n            }}\n          ></div>\n        ))}\n    </div>\n  );\n}\n\nHandles.propTypes = {\n  totalWidth: PropTypes.number.isRequired,\n  totalHeight: PropTypes.number.isRequired,\n  totalImages: PropTypes.number.isRequired,\n  zIndex: PropTypes.number.isRequired,\n  listWidths: PropTypes.array.isRequired,\n  setListWidths: PropTypes.func.isRequired,\n  updateDesc: PropTypes.func,\n};\n"],"names":[],"version":3,"file":"main.js.map"}